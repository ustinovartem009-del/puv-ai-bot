import logging
import asyncio
import aiohttp
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

TELEGRAM_TOKEN = "8203109703:AAFZJUv9vYIv19F1qQAZoBKxCuBswWyvc3c"
DEEPSEEK_API_KEY = "sk-1bc290e93b3145d7932f1b1925c609c2"

session = None

async def get_session():
    global session
    if session is None:
        session = aiohttp.ClientSession()
    return session

async def close_session():
    global session
    if session:
        await session.close()
        session = None

async def ask_deepseek(question):
    try:
        url = "https://api.deepseek.com/v1/chat/completions"
        headers = {
            "Authorization": f"Bearer {DEEPSEEK_API_KEY}",
            "Content-Type": "application/json"
        }
        
        data = {
            "model": "deepseek-chat",
            "messages": [
                {
                    "role": "system", 
                    "content": "–¢—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç PetVel AI. –û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ. –ö–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–π –ø–æ –∑–¥–æ—Ä–æ–≤—å—é –∂–∏–≤–æ—Ç–Ω—ã—Ö, –¥–∞–≤–∞–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–∏—Ç–∞–Ω–∏—é, —É—Ö–æ–¥—É –∏ –ª–µ—á–µ–Ω–∏—é. –í—Å–µ–≥–¥–∞ —É—Ç–æ—á–Ω—è–π, —á—Ç–æ –ø—Ä–∏ —Å–µ—Ä—å–µ–∑–Ω—ã—Ö —Å–∏–º–ø—Ç–æ–º–∞—Ö –Ω—É–∂–Ω–æ —Å—Ä–æ—á–Ω–æ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä—É. –ë—É–¥—å —Ç–æ—á–Ω—ã–º, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º, –Ω–æ –ø—Ä–∏ —ç—Ç–æ–º –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ —Å–≤—è–∑–∞–Ω —Å –∂–∏–≤–æ—Ç–Ω—ã–º–∏, –≤–µ–∂–ª–∏–≤–æ —Å–æ–æ–±—â–∏ –æ–± —ç—Ç–æ–º."
                },
                {
                    "role": "user", 
                    "content": question
                }
            ],
            "max_tokens": 1500,
            "temperature": 0.7,
            "stream": False
        }
        
        current_session = await get_session()
        
        async with current_session.post(url, headers=headers, json=data, timeout=30) as response:
            if response.status == 200:
                result = await response.json()
                return result['choices'][0]['message']['content']
            else:
                error_text = await response.text()
                logger.error(f"DeepSeek API error: {response.status} - {error_text}")
                return "–ò–∑–≤–∏–Ω–∏—Ç–µ, –≤–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
                
    except asyncio.TimeoutError:
        logger.error("DeepSeek API timeout")
        return "–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –∏—Å—Ç–µ–∫–ª–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
    except Exception as e:
        logger.error(f"DeepSeek connection error: {str(e)}")
        return f"–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {str(e)}"

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    welcome_text = """
üêæ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ PetVel AI! 

–Ø –≤–∞—à AI-–≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä –Ω–∞ –±–∞–∑–µ DeepSeek.

ü§ñ –ü—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –ø–∏—Ç–æ–º—Ü–∞:

–ü—Ä–∏–º–µ—Ä—ã:
‚Ä¢ "–£ —Å–æ–±–∞–∫–∏ —Ä–≤–æ—Ç–∞ 2 –¥–Ω—è"
‚Ä¢ "–ö–æ—Ç–µ–Ω–æ–∫ –Ω–µ –µ—Å—Ç, –≤—è–ª—ã–π" 
‚Ä¢ "–ß–µ–º –∫–æ—Ä–º–∏—Ç—å –∫–æ—à–∫—É 1 –≥–æ–¥"
‚Ä¢ "–ü–æ–≤–µ–¥–µ–Ω–∏–µ —Å–æ–±–∞–∫–∏ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å"

‚ö†Ô∏è –í–∞–∂–Ω–æ: 
‚Ä¢ –ü—Ä–∏ —Å–µ—Ä—å–µ–∑–Ω—ã—Ö —Å–∏–º–ø—Ç–æ–º–∞—Ö —Å—Ä–æ—á–Ω–æ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä—É!
‚Ä¢ –Ø –Ω–µ –∑–∞–º–µ–Ω—è—é –æ—á–Ω—ã–π –æ—Å–º–æ—Ç—Ä —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞
‚Ä¢ –í —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö –∑–≤–æ–Ω–∏—Ç–µ –≤ –≤–µ—Ç–∫–ª–∏–Ω–∏–∫—É

–î–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –æ –∑–¥–æ—Ä–æ–≤—å–µ –ø–∏—Ç–æ–º—Ü–∞!
"""
    await update.message.reply_text(welcome_text)

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    help_text = """
üìñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:

/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/help - –ü–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É
/info - –û –±–æ—Ç–µ

üí° –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:
–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å –æ –≤–∞—à–µ–º –ø–∏—Ç–æ–º—Ü–µ, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å!

üêï –ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤:
‚Ä¢ "–°–æ–±–∞–∫–∞ —á–µ—à–µ—Ç—Å—è, —á—Ç–æ –¥–µ–ª–∞—Ç—å?"
‚Ä¢ "–ö–æ—Ç –Ω–µ –ø—å–µ—Ç –≤–æ–¥—É"
‚Ä¢ "–©–µ–Ω–æ–∫ –≤—è–ª—ã–π –ø–æ—Å–ª–µ –ø—Ä–∏–≤–∏–≤–∫–∏"
‚Ä¢ "–ß–µ–º –º–æ–∂–Ω–æ –∫–æ—Ä–º–∏—Ç—å –∫–æ—à–∫—É?"

‚ö†Ô∏è –ü–æ–º–Ω–∏—Ç–µ: –ü—Ä–∏ –æ—Å—Ç—Ä—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è—Ö –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä—É!
"""
    await update.message.reply_text(help_text)

async def info_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    info_text = """
ü§ñ PetVel AI Bot

–í–µ—Ä—Å–∏—è: 1.0
–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: DeepSeek AI
–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫

–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –∑–¥–æ—Ä–æ–≤—å—é –∂–∏–≤–æ—Ç–Ω—ã—Ö
‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–∏—Ç–∞–Ω–∏—é –∏ —É—Ö–æ–¥—É
‚Ä¢ –°–æ–≤–µ—Ç—ã –ø–æ –ø–æ–≤–µ–¥–µ–Ω–∏—é –ø–∏—Ç–æ–º—Ü–µ–≤
‚Ä¢ –ü–µ—Ä–≤–∞—è –ø–æ–º–æ—â—å –ø—Ä–∏ –Ω–µ–æ—Ç–ª–æ–∂–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è—Ö

üîí –ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å: –í–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –±–µ–∑–æ–ø–∞—Å–Ω–æ.
"""
    await update.message.reply_text(info_text)

async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_message = update.message.text
    user_id = update.effective_user.id
    
    if user_message.startswith('/'):
        return
    
    logger.info(f"User {user_id} asked: {user_message}")
    
    await context.bot.send_chat_action(chat_id=update.effective_chat.id, action="typing")
    
    try:
        ai_response = await ask_deepseek(user_message)
        response_text = f"üêæ PetVel AI –æ—Ç–≤–µ—á–∞–µ—Ç:\n\n{ai_response}"
        await update.message.reply_text(response_text)
        
    except Exception as e:
        logger.error(f"Error handling message from user {user_id}: {str(e)}")
        error_text = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ."
        await update.message.reply_text(error_text)

async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    logger.error(f"Update {update} caused error {context.error}")
    
    if update and update.message:
        try:
            await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ú—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –µ—ë —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ–º.")
        except Exception as e:
            logger.error(f"Failed to send error message: {e}")

def main():
    try:
        application = Application.builder().token(TELEGRAM_TOKEN).build()
        
        application.add_handler(CommandHandler("start", start))
        application.add_handler(CommandHandler("help", help_command))
        application.add_handler(CommandHandler("info", info_command))
        application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text))
        
        application.add_error_handler(error_handler)

        print("‚úÖ PetVel AI –±–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
        print("üöÄ DeepSeek API –ø–æ–¥–∫–ª—é—á–µ–Ω")
        print("üì± –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –ø—Ä–∏–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏–π...")
        print("‚ö° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")

        application.run_polling()

    except KeyboardInterrupt:
        print("\nüõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        asyncio.run(close_session())

if __name__ == "__main__":
    main()
